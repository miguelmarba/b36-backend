scalar EmailAddress
scalar URL
scalar Upload
directive @auth on FIEL_DEFINITION | FIELD
type Query{
    getAuthors:[Author]!
    gerSingle(id:ID):Author!
}

type Mutation{
    createNewAuthor(data:AuthorInput!):Author!@auth
    updateOneAuthor(id:ID, data:AuthorInputUpdate):Author!@auth
    deleteOneAuthor(id:ID):String!@auth
}

type Author{
    _id:ID!
    first_name:String!
    last_name:String!
    email:EmailAddress!
    birth_date:String!
    posts:[Post]!
    gender:GENDERS
    profile_pic:String!
}

input AuthorInput{
    first_name:String!
    last_name:String!
    email:EmailAddress!
    password:String!
    birth_date:String
    gender:GENDERS
    profile_pic:String
}

input AuthorInputUpdate{
    first_name:String!
    last_name:String!
    email:EmailAddress!
    birth_date:String
    gender:GENDERS
    profile_pic:String
    is_active:Boolean
}

type Post{
    _id:ID!
    title:String!
    content:String!
    author:Author!
    cover:String!
    liked_by:[Author]
    is_active:Boolean
}

enum GENDERS{
    M
    F
    O
}